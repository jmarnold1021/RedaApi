
# Custom nginx template with port mapping
# http://dokku.viewdocs.io/dokku/configuration/nginx/#example-using-new-proxy-port-mapping

# The language below is a subset of
# the full functionality provided by Go's
# text template package.
# https://github.com/gliderlabs/sigil

{{ range $port_map := .PROXY_PORT_MAP | split " " }}
{{ $port_map_list := $port_map | split ":" }}
{{ $scheme := index $port_map_list 0 }}
{{ $listen_port := index $port_map_list 1 }}
{{ $upstream_port := index $port_map_list 2 }}


server {
  listen      [::]:{{ $listen_port }};
  listen      {{ $listen_port }};
  server_name {{ $.NOSSL_SERVER_NAME }};
  access_log  /var/log/nginx/{{ $.APP }}-access.log;
  error_log   /var/log/nginx/{{ $.APP }}-error.log;

  #Custom pages and statuses
  #error_page 403 /403-error.html;
  #location /403-error.html {
  #  root /usr/share/nginx/html;
  #  allow all;
  #}

  location    ~ /(.*)/results/(.*)$ {

    gzip on;
    gzip_min_length  1100;
    gzip_buffers  4 32k;
    gzip_types    text/css text/javascript text/xml text/plain text/x-component application/javascript application/x-javascript application/json application/xml  application/rss+xml font/truetype application/x-font-ttf font/opentype application/vnd.ms-fontobject image/svg+xml;
    gzip_vary on;
    gzip_comp_level  6;

    proxy_pass  http://{{ $.APP }}-fs-{{ $upstream_port }};
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Request-Start $msec;

    # need to recreate the upstream close early issue to test
    # this solution
    proxy_buffers 8 64k;
    proxy_buffer_size 64k;
    proxy_busy_buffers_size 128k;

    #proxy_buffers 8 256k;
    #proxy_buffer_size 256k;
    #proxy_busy_buffers_size 512k;

    # Added for redaapi
    proxy_connect_timeout 75s;
    proxy_read_timeout 86400s;
    proxy_send_timeout 86400s;
  }

  location    / {

    gzip on;
    gzip_min_length  1100;
    gzip_buffers  4 32k;
    gzip_types    text/css text/javascript text/xml text/plain text/x-component application/javascript application/x-javascript application/json application/xml  application/rss+xml font/truetype application/x-font-ttf font/opentype application/vnd.ms-fontobject image/svg+xml;
    gzip_vary on;
    gzip_comp_level  6;

    proxy_pass  http://{{ $.APP }}-{{ $upstream_port }};
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Request-Start $msec;

    # need to recreate the upstream close early issue to test
    # this solution
    proxy_buffers 8 64k;
    proxy_buffer_size 64k;
    proxy_busy_buffers_size 128k;

    #proxy_buffers 8 256k;
    #proxy_buffer_size 256k;
    #proxy_busy_buffers_size 512k;

    # Added for redaapi
    proxy_connect_timeout 75s;
    proxy_read_timeout 86400s;
    proxy_send_timeout 86400s;
  }

  # Added for redaapi
  client_max_body_size 1024m;

  include {{ $.DOKKU_ROOT }}/{{ $.APP }}/nginx.conf.d/*.conf;
}


# NUMBER of pure fs containers, this is what is set
{{ $len_fs_listeners := 2 }}

# Total number of containers info
{{ $listeners := $.DOKKU_APP_LISTENERS | split " " }}
{{ $len_listeners := len $listeners }}

# If fs containers is not > 0 and < the total number of workers
# both fs and data get the full all as is tradition
{{ $wgt := gt $len_fs_listeners 0 }}
{{ $wlt := lt $len_fs_listeners $len_listeners }}

# Generate listener maps these can be used independantly in the location blocks above
{{ range $upstream_port := $.PROXY_UPSTREAM_PORTS | split " " }}
  upstream {{ $.APP }}-fs-{{ $upstream_port }} {
        {{ range $index, $listeners := $.DOKKU_APP_LISTENERS | split " " }}

            {{ $listener_list := $listeners | split ":" }}
            {{ $listener_ip := index $listener_list 0 }}

            {{ if and $wlt $wgt }}
                    {{ if lt $index $len_fs_listeners }}
                      server {{ $listener_ip }}:{{ $upstream_port }};
                    {{ end }}
            {{ else }}
                    server {{ $listener_ip }}:{{ $upstream_port }};
            {{ end }}
        {{ end }}
  }
  upstream {{ $.APP }}-{{ $upstream_port }} {
        {{ range $index, $listeners := $.DOKKU_APP_LISTENERS | split " " }}

            {{ $listener_list := $listeners | split ":" }}
            {{ $listener_ip := index $listener_list 0 }}

            {{ if and $wlt $wgt }}
                    {{ if ge $index $len_fs_listeners }}
                      server {{ $listener_ip }}:{{ $upstream_port }};
                    {{ end }}
            {{ else }}
                    server {{ $listener_ip }}:{{ $upstream_port }};
            {{ end }}
        {{ end }}
  }
{{ end }}

#This is for the range at the top of the file
{{ end }}